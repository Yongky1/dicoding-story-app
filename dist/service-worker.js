const CACHE_NAME="dicoding-story-app-v1",urlsToCache=["/","/index.html","/bundle.js","/manifest.json","/offline.html","/notification.mp3"];self.addEventListener("install",(t=>{t.waitUntil(caches.open(CACHE_NAME).then((t=>{const e=urlsToCache.map((e=>fetch(e).then((n=>{if(!n.ok)throw new Error(`Failed to fetch ${e}`);return t.put(e,n)})).catch((t=>(console.warn(`Failed to cache ${e}:`,t),Promise.resolve())))));return Promise.all(e)})))})),self.addEventListener("activate",(t=>{t.waitUntil(caches.keys().then((t=>Promise.all(t.map((t=>{if(t!==CACHE_NAME)return caches.delete(t)}))))))})),self.addEventListener("fetch",(t=>{t.respondWith(caches.match(t.request).then((e=>{if(e)return e;const n=t.request.clone();return fetch(n).then((e=>{if(!e||200!==e.status||"basic"!==e.type)return e;const n=e.clone();return caches.open(CACHE_NAME).then((e=>{e.put(t.request,n)})).catch((t=>{console.warn("Failed to cache response:",t)})),e})).catch((()=>"navigate"===t.request.mode?caches.match("/index.html"):"image"===t.request.destination?new Response("",{status:404,statusText:"Not Found"}):caches.match("/offline.html")))})))})),self.addEventListener("push",(t=>{let e;try{e=JSON.parse(t.data.text())}catch(n){e={title:"Dicoding Story App",options:{body:t.data.text()}}}e.timestamp=Date.now();const n={body:e.options.body,icon:"/icons/icon-192x192.png",badge:"/icons/icon-192x192.png",vibrate:[100,50,100],data:{notification:e,dateOfArrival:Date.now(),primaryKey:1},actions:[{action:"explore",title:"View Story"},{action:"close",title:"Close"}]};t.waitUntil(self.registration.showNotification(e.title,n))})),self.addEventListener("notificationclick",(t=>{if(t.notification.close(),"explore"===t.action){const e=t.notification.data.notification;t.waitUntil(clients.matchAll().then((t=>{t.forEach((t=>{t.postMessage({type:"NEW_NOTIFICATION",notification:e})}))}))),t.waitUntil(clients.openWindow("/"))}}));